name: deploy

env:
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}

on:
  push:
    tags:
      - v*
      - destroy*

permissions:
  id-token: write
  contents: read

jobs:
  get_environment:
    name: Get environment
    runs-on: ubuntu-latest
    outputs:
      environment_name: ${{ steps.get_env_from_tag.outputs.environment_name }}
    steps:
      - name: Get environment from tag
        id: get_env_from_tag
        run: |
          environment_name=$(echo $GITHUB_REF_NAME | cut -d'-' -f2-)
          echo "environment_name=$environment_name" >> $GITHUB_OUTPUT
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: get_environment
    environment: ${{ needs.get_environment.outputs.environment_name }}
    env:
      ENV_NAME: ${{ needs.get_environment.outputs.environment_name }}
    defaults:
      run:
        working-directory: deploy
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform init
        run: |
          terraform init \
          -backend-config="key=$ENV_NAME.tfstate"
      - name: Terraform plan
        run: |
          terraform plan \
          -var-file="environments/${ENV_NAME}/terraform.tfvars"
      - name: Terraform apply
        run: |
          terraform apply -auto-approve \
          -var-file="environments/${ENV_NAME}/terraform.tfvars"
